Newsgroups: perl.jobs
Path: nntp.perl.org
Xref: nntp.perl.org perl.jobs:291
Return-Path: <jobs-admin@perl.org>
Mailing-List: contact jobs-help@perl.org; run by ezmlm
Delivered-To: mailing list jobs@perl.org
Delivered-To: moderator for jobs@perl.org
Received: (qmail 23832 invoked by uid 1016); 9 Jan 2002 19:36:58 -0000
Date: 9 Jan 2002 19:36:58 -0000
Message-ID: <20020109193658.23831.qmail@onion.perl.org>
To: jobs@perl.org
Subject: Hosting Account Provisioning (telecommute), United States, Louisiana, New Orleans
Approved: news@nntp.perl.org
From: jobs-admin@perl.org (Perl Jobs)

Online URL for this job: http://jobs.perl.org/job/191

To subscribe to this list, send mail to jobs-subscribe@perl.org.
To unsubscribe, send mail to jobs-unsubscribe@perl.org.

Posted: January  8, 2002

Job title: Hosting Account Provisioning

Company name: videorelay.com

Location: United States, Louisiana, New Orleans

Pay rate: Bid?

Travel: 0%

Terms of employment: Independent contractor (project-based)

Hours: Flexible

Onsite: no

Description:
Hello:

I am seeking the services of a programmer for the creation of an automated
account provisioning system for my streaming media company.   We offer
several different streaming media hosting packages and I want to create an
easy to use account provisioning and linking system that gives the end-user
control over their account.  I have a good idea of what I’d like the system
to include, and am certain that we have many of the elements already in
place.	

As customers sign on, their credit cards are authorized and account info is
stored in a customer database.	 Usernames and passwords are entered and
home directories and created.  They are then given access to the Control
Panel, where they can manage their accounts and media.	Lastly, a Dynamic
Linking System allows them to easily link to streamed media files from
their web pages.

 As far as I can tell, there are three parts to this project:  

Automatic Account Provisioning 
User Control Panel
Dynamic Linking System

But First: A Brief System Overview

We have three streaming media servers (QuickTime, Windows & Real) connected
to a Network Attached Storage (NAS) device.  The NAS is run with the Linux
operating system (6.2 ?).  Customers store their media in home directories
on the NAS.  Customers have user accounts on the NAS and can access their
CHROOTed home directories via ftp.  The streaming servers connect via
ethernet to the customer’s home directory and deliver the streamed content.


    1.	 Automatic Account Provisioning

Account provisioning needs to be automated.  The process should flow
something like this:
    a. Capture of Account Information – written to database — email
notification
    b. Credit Card Authorization and Approval — number written to database
— email notification
    c. Account Provisioning on NAS – creation of chrooted directory (sample
media files in directory from SKEL), unique username & password (user
selected)

We also offer a free trial to entice potential customers to use our
services.  We would need a way to convert free trials to paying accounts
(perhaps in the upgrade account section of the control panel?).  
Additionally, we need a system that will automatically rename the
directories of free trials (or some other means of turning them off) after
a set period of time.  Free trials do not require the input and acceptance
of credit cards until they are converted to paying accounts.

    2.	 User Control Panel

The control panel provides an easy access to customer files and account
information.  The control panel obviously needs to be accessed via a web
interface and needs to be password protected with the same username and
password entered in the web form.  The control panel needs to have
information about:

* disk space allowed (quotas)
* disk used 
* megabytes transferred (as determined from streaming server logs?
Directory stats?)
* megabytes of transfer remaining (depends on hosting package selected)
* file upload
* file download
	* ability to delete and rename files
	• ability to upgrade account to another hosting package

    3.	 Dynamic Linking System

Each customer stores all of their files in one directory.  In an effort to
make the linking of these files more user friendly, I want to create a
dynamic linking system that converts http requests to rtsp behind the
scenes.  Each streaming media format links in slightly different ways.	By
using mod::rewrite with apache, we can write regular expressions to
determine what kind of media file is being requested, then send the correct
link back to the requester— launching the correct media player or browser
plug-in.  By doing this, users will be able to link their media files into
their websites using standard http requests instead of ram files, poster
movies and the like.  


If you have any further questions about the above project, please feel free
to reply to this email or contact me a one of the numbers below.  I’m
anxious to get this project completed.	As I said before, we have most of
the elements in place... All that is left is your expertise.  

Sincerely,

Greg Fox, Jr.

---
www.videorelay.com
800-432-3286 Ext. 231
504-733-9887 Ext. 231
504-733-2232 fax



Required skills: perl, mysql, linux administration

URL for more information: http://www.videorelay.com/

Contact information:
Greg Fox Jr
gfoxjr@videorelay.com

800-432-3286 Ext. 231
504-733-9887 Ext. 231
504-733-2232 fax


